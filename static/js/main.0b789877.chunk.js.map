{"version":3,"sources":["assets/active.svg","assets/arrow-right.svg","assets/help.svg","components/resources/resourceItem/ResourceItem.js","context/MyContext.js","components/resources/ResourceMain.js","components/resources/resourceDetails/Title/ResourceItemTitle.js","components/resources/resourceDetails/GeneralDetails/GeneralDetailsContent/GeneralDetailsContent.js","components/resources/resourceDetails/GeneralDetails/GeneralDetails.js","components/resources/resourceDetails/PermittedActions/PermittedActionsContent/PermittedActionsContent.js","components/resources/resourceDetails/PermittedActions/PermittedActions.js","components/resources/resourceDetails/ResourceDetails.js","services/utils.js","context/MyProvider.js","services/fetch.js","services/services.js","views/mainView/MainView.view.js","App.js","index.js"],"names":["module","exports","ResourceItem","props","resourceClick","resource","isSelected","className","onClick","src","active","alt","name","arrowRight","MyContext","React","createContext","ResourceMain","resources","resourcesViews","map","Consumer","key","id","context","currentResource","ResourceItemTitle","useState","isHover","setIsHover","title","help","onMouseEnter","onMouseLeave","GeneralDetailsContent","value","GeneralDetails","description","resourceType","path","PermittedActionsContent","item","PermittedActions","actionsArray","permittedActionsViews","action","ResourceDetails","initResourcesMap","actions","resourcesMap","Map","forEach","actionsArrayTemp","actionIds","tempAction","find","push","set","MyProvider","Provider","this","children","Component","fetchMode","mode","baseUrl","fetchService","get","url","a","headers","request","Request","method","fetch","then","response","json","catch","error","post","body","JSON","stringify","patch","services","getResources","data","length","resourcesMockData","getActions","MainView","history","location","state","setState","useEffect","Promise","all","params","URLSearchParams","search","currentSource","Number","replace","App","from","exact","to","component","ReactDOM","render","document","getElementById"],"mappings":"2uCAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,mbCyB5BC,G,MApBM,SAAAC,GAAU,IAErBC,EAAwCD,EAAxCC,cAAeC,EAAyBF,EAAzBE,SAAUC,EAAeH,EAAfG,WAMjC,OACE,wBAAIC,UAAS,uBAAkBD,EAAa,wBAA0B,IACpEE,QAAS,WALXJ,MAME,yBAAKK,IAAKC,IAAQC,IAAI,WACtB,2BAAOJ,UAAU,cAAcF,EAASO,MACxC,yBAAKL,UAAU,sBACb,yBAAKE,IAAKI,IAAYF,IAAI,mBCfnBG,EAFGC,IAAMC,gBC0BTC,EAvBM,SAAAd,GAAU,IACpBe,EAA6Bf,EAA7Be,UAAWd,EAAkBD,EAAlBC,cAEde,EAAiBD,GAAaA,EAAUE,KAAI,SAAAf,GAAQ,OACpD,kBAAC,EAAUgB,SAAX,CAAoBC,IAAKjB,EAASkB,KAC7B,SAAAC,GAAO,OACJ,kBAAC,EAAD,CAAcnB,SAAUA,EACxBC,WAAYD,EAASkB,KAAOC,EAAQC,gBAAgBF,GACpDnB,cAAe,kBAAMA,EAAcC,YAK/C,OACI,yBAAKE,UAAU,wBACX,2BAAOA,UAAU,eAAjB,SACA,yBAAKA,UAAU,mBACVY,K,qCCMFO,EAxBW,SAAAvB,GAAU,IAAD,EAEDwB,oBAAS,GAFR,mBAExBC,EAFwB,KAEfC,EAFe,KAY/B,OACI,yBAAKtB,UAAU,8BACX,2BAAOA,UAAU,4BAA6BJ,EAAM2B,OACpD,yBAAKvB,UAAU,YACX,yBAAKE,IAAKsB,IAAMpB,IAAI,OAAOqB,aAZd,WACrBH,GAAW,IAYCI,aATS,WACrBJ,GAAW,MASFD,GAAW,8BAAOzB,EAAM2B,UCL1BI,G,MAde,SAAA/B,GAAU,IAE7B2B,EAAgB3B,EAAhB2B,MAAOK,EAAShC,EAATgC,MAEd,OACI,yBAAK5B,UAAU,gCACX,2BAAOA,UAAU,oCAAoCuB,GACrD,yBAAKvB,UAAU,sCACX,2BAAOA,UAAU,oCAAqC4B,OCevDC,EAnBQ,SAAAjC,GAAU,IAErB2B,EAAU3B,EAAV2B,MAER,OACI,kBAAC,EAAUT,SAAX,MACK,SAAAG,GAAO,OACJA,EAAQC,iBAAmB,yBAAKlB,UAAU,0BACtC,kBAAC,EAAD,CAAmBuB,MAAOA,IAC1B,kBAAC,EAAD,CAAuBA,MAAO,OAAQK,MAAOX,EAAQC,gBAAgBb,OACrE,kBAAC,EAAD,CAAuBkB,MAAO,cAAeK,MAAOX,EAAQC,gBAAgBY,cAC5E,kBAAC,EAAD,CAAuBP,MAAO,gBAAiBK,MAAOX,EAAQC,gBAAgBa,eAC9E,kBAAC,EAAD,CAAuBR,MAAO,OAAQK,MAAOX,EAAQC,gBAAgBc,YCP1EC,G,YATiB,SAAArC,GAE5B,OACI,yBAAKI,UAAU,oCACX,2BAAOA,UAAU,oCAAqCJ,EAAMsC,SCevDC,EAhBQ,SAAAvC,GAAU,IACxBwC,EAAuBxC,EAAvBwC,aAAcb,EAAS3B,EAAT2B,MAEfc,EAAwBD,GAAgBA,EAAavB,KAAI,SAAAyB,GAAM,OACrE,kBAAC,EAAD,CAAyBvB,IAAKuB,EAAOtB,GAAIkB,KAAMI,EAAOjC,UAEtD,OACI,yBAAKL,UAAU,4BACX,kBAAC,EAAD,CAAmBuB,MAAOA,IAC1B,yBAAKvB,UAAU,oCACVqC,KCYFE,EArBS,SAAA3C,GAEtB,OACE,kBAAC,EAAUkB,SAAX,MACG,SAAAG,GAAO,OACN,yBAAKjB,UAAU,6BACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,wBACb,2BAAOA,UAAU,wBAAwBiB,EAAQC,iBAAmBD,EAAQC,gBAAgBb,OAE9F,yBAAKL,UAAU,4BACb,kBAAC,EAAD,CAAgBuB,MAAO,oBACvB,kBAAC,EAAD,CAAkBa,aAAcxC,EAAMwC,aAAcb,MAAO,6BCnB5DiB,EAAmB,SAAC7B,EAAW8B,GACxC,IAAIC,EAAe,IAAIC,IAevB,OAbAhC,EAAUiC,SAAQ,SAAAV,GAChB,IAAIW,EAAmB,GACvBX,EAAKY,UAAUF,SAAQ,SAAAV,GAErB,IAAMa,EAAaN,EAAQO,MAAK,SAAAV,GAAM,OAAIJ,IAASI,EAAOtB,MACtD+B,GACFF,EAAiBI,KAAKF,MAI1BL,EAAaQ,IAAIhB,EAAKlB,GAAI6B,MAGrBH,G,+BCbUS,E,4JAEjB,WACI,OACI,kBAAC,EAAUC,SAAX,CACIxB,MAAO,CACHV,gBAAiBmC,KAAKzD,MAAMsB,kBAG/BmC,KAAKzD,MAAM0D,c,GATY9C,IAAM+C,WCHxCC,EAAY,CAAEC,KAAM,QAEpBC,EAAU,gDAuDDC,EADM,I,sCAlDjBC,I,uCAAM,WAAOC,GAAP,iBAAAC,EAAA,6DACIC,EAAU,CACZ,eAAgB,qCAGdC,EAAU,IAAIC,QAAJ,UAAeP,GAAf,OAAyBG,GAAO,CAC5CK,OAAQ,MACRH,QAASA,IAPX,kBAUKI,MAAMH,EAASR,GAAWY,MAAK,SAACC,GACnC,OAAQA,EAASC,UAEpBC,OAAM,SAACC,GACA,MAAQ,OAdd,2C,2DAmBNC,K,uCAAO,WAAOZ,EAAKa,GAAZ,iBAAAZ,EAAA,6DACGC,EAAU,CACZ,eAAgB,qCAEdC,EAAU,IAAIC,QAAJ,UAAeP,GAAf,OAAyBG,GAAO,CAC5CK,OAAQ,OACRH,QAASA,EACTW,KAAMC,KAAKC,UAAUF,KAPtB,kBAUIP,MAAMH,EAASR,GAAWY,MAAK,SAACC,GACnC,OAAQA,EAASC,WAXlB,2C,6DAePO,M,uCAAQ,WAAOhB,EAAKa,GAAZ,iBAAAZ,EAAA,6DACEC,EAAU,CACZ,eAAgB,qCAEdC,EAAU,IAAIC,QAAJ,UAAeP,GAAf,OAAyBG,GAAO,CAC5CK,OAAQ,QACRH,QAASA,EACTW,KAAMC,KAAKC,UAAUF,KAPrB,kBAUGP,MAAMH,EAASR,GAAWY,MAAK,SAACC,GACnC,OAAQA,EAASC,WAXjB,2C,iECZGQ,EADE,I,sCAtBbC,a,sBAAe,8BAAAjB,EAAA,sEACaH,EAAaC,IAAI,aAD9B,aAEC,QADNjD,EADK,cAEC,IAATA,GAAA,UAAAA,EAAWqE,YAAX,eAAiBC,QAAS,GAFlB,yCAGAtE,EAAUqE,MAHV,gCAMAE,EAAkBvE,WANlB,2C,KAUfwE,W,sBAAa,8BAAArB,EAAA,sEACaH,EAAaC,IAAI,WAD9B,aAEC,QADJnB,EADG,cAEC,IAAPA,GAAA,UAAAA,EAASuC,YAAT,eAAeC,QAAS,GAFlB,yCAGExC,EAAQuC,MAHV,gCAMEE,EAAkBzC,SANpB,4CC+DF2C,EArEE,SAAAxF,GAAU,IAEfyF,EAAsBzF,EAAtByF,QAASC,EAAa1F,EAAb0F,SAFK,EAIIlE,mBAAS,CAC/BF,gBAAiB,KACjBP,UAAW,KACXyB,aAAc,KACdM,aAAc,OARI,mBAIf6C,EAJe,KAIRC,EAJQ,KAuDtB,OAlCAC,qBAAU,YACY,uCAAG,0CAAA3B,EAAA,sEACkB4B,QAAQC,IAAI,CAC3Cb,EAASC,eAAgBD,EAASK,eAFrB,mCACVxE,EADU,KACC8B,EADD,KAMXC,EAAeF,EAAiB7B,EAAW8B,GAE3CmD,EAAS,IAAIC,gBAAgBP,EAASQ,SACtC5D,EAAO0D,EAAOhC,IAAI,SAGpBmC,EAAgBpF,EAAUqF,OAAO9D,EAAO,KAGxC6D,EAAgBpF,EAAU,GAC1B0E,EAAQY,QAAR,iBAGJT,EAAS,2BACFD,GADC,IAEJrE,gBAAiB6E,EACjBpF,UAAWA,EACX+B,aAAcA,EACdN,aAAcM,EAAakB,IAAImC,EAAc/E,OAxBhC,4CAAH,qDA6BlB+D,KAED,IAGC,yBAAK/E,UAAU,QACX,wBAAIA,UAAU,eAAd,YACA,yBAAKA,UAAU,gBACX,kBAAC,EAAD,CAAYkB,gBAAiBqE,EAAMrE,iBAC/B,kBAAC,EAAD,CAAcP,UAAW4E,EAAM5E,UAC1Bd,cAlDO,SAACC,GACzBuF,EAAQY,QAAR,qBAA8BnG,EAASkB,KAEvCwE,EAAS,2BACFD,GADC,IAEJrE,gBAAiBpB,EACjBsC,aAAcmD,EAAM7C,aAAakB,IAAI9D,EAASkB,UA6CtC,kBAAC,EAAD,CAAiBoB,aAAcmD,EAAMnD,mBCrD1C8D,EAbH,WAER,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUC,KAAK,IAAIC,OAAK,EAACC,GAAG,UAC5B,kBAAC,IAAD,CAAOrE,KAAK,QAAQsE,UAAWlB,OCL/CmB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0b789877.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/active.1b4ccf59.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-right.c0b72c3f.svg\";","module.exports = __webpack_public_path__ + \"static/media/help.00ed6d43.svg\";","import React from 'react'\r\nimport active from '../../../assets/active.svg'\r\nimport arrowRight from '../../../assets/arrow-right.svg'\r\nimport \"./resourceItem.scss\";\r\n\r\nconst ResourceItem = props => {\r\n\r\n  const { resourceClick, resource, isSelected } = props\r\n\r\n  const resourceItemClick = () => {\r\n    resourceClick()\r\n  }\r\n\r\n  return (\r\n    <li className={`items-layout ${isSelected ? \"items-layout-selected\" : \"\"}`}\r\n      onClick={() => resourceItemClick()}>\r\n      <img src={active} alt=\"active\" />\r\n      <label className=\"items-text\">{resource.name}</label>\r\n      <div className=\"arrow-right-layout\">\r\n        <img src={arrowRight} alt=\"arrowRight\" />\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default ResourceItem","import React from 'react';\r\n\r\nconst MyContext = React.createContext();\r\n\r\nexport default MyContext;","import React from 'react'\r\nimport \"./resourceMain.scss\";\r\nimport ResourceItem from './resourceItem/ResourceItem'\r\nimport MyContext from '../../context/MyContext'\r\n//fdg\r\nconst ResourceMain = props => {\r\n    const {resources, resourceClick } = props\r\n    \r\n    let resourcesViews = resources && resources.map(resource =>\r\n        <MyContext.Consumer key={resource.id}>\r\n            {context => ( \r\n                <ResourceItem resource={resource} \r\n                isSelected={resource.id === context.currentResource.id} \r\n                resourceClick={() => resourceClick(resource)} />\r\n            )}\r\n        </MyContext.Consumer>\r\n    )\r\n\r\n    return (\r\n        <div className=\"main-resource-layout\">\r\n            <label className=\"items-title\">Items</label>\r\n            <div className=\"resources-views\">\r\n                {resourcesViews}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResourceMain","import React, { useState } from 'react';\r\nimport \"./resourceItemTitle.scss\";\r\nimport help from '../../../../assets/help.svg'\r\n\r\nconst ResourceItemTitle = props => {\r\n\r\n    const [isHover, setIsHover] = useState(false);\r\n\r\n    const handleMouseEnter = () => {\r\n        setIsHover(true);\r\n    }\r\n\r\n    const handleMouseLeave = () => {\r\n        setIsHover(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"resource-item-title-layout\">\r\n            <label className=\"resource-item-title-text\" >{props.title}</label>\r\n            <div className=\"img-view\">\r\n                <img src={help} alt=\"help\" onMouseEnter={handleMouseEnter}\r\n                    onMouseLeave={handleMouseLeave} />\r\n                {isHover && <span>{props.title}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResourceItemTitle","import React from 'react'\r\nimport \"./generalDetailsContent.scss\";\r\n\r\nconst GeneralDetailsContent = props => {\r\n\r\n    const {title, value} = props\r\n\r\n    return (\r\n        <div className=\"resource-item-content-layout\">\r\n            <label className=\"resource-item-content-title-text\">{title}</label>\r\n            <div className=\"resource-item-content-value-layout\">\r\n                <label className=\"resource-item-content-value-text\" >{value}</label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GeneralDetailsContent","import React from 'react'\r\nimport \"./generalDetails.scss\";\r\nimport ResourceItemTitle from \"../Title/ResourceItemTitle\"\r\nimport GeneralDetailsContent from \"./GeneralDetailsContent/GeneralDetailsContent\"\r\nimport MyContext from '../../../../context/MyContext'\r\n\r\n\r\nconst GeneralDetails = props => {\r\n\r\n    const { title } = props\r\n\r\n    return (\r\n        <MyContext.Consumer>\r\n            {context => (\r\n                context.currentResource && <div className=\"general-details-layout\">\r\n                    <ResourceItemTitle title={title} />\r\n                    <GeneralDetailsContent title={'NAME'} value={context.currentResource.name} />\r\n                    <GeneralDetailsContent title={'DESCRIPTION'} value={context.currentResource.description} />\r\n                    <GeneralDetailsContent title={'RESOURCE TYPE'} value={context.currentResource.resourceType} />\r\n                    <GeneralDetailsContent title={'PATH'} value={context.currentResource.path} />\r\n                </div>\r\n            )}\r\n        </MyContext.Consumer>\r\n    )\r\n}\r\n\r\nexport default GeneralDetails","import React from 'react'\r\nimport \"./permittedActionsContent.scss\";\r\n\r\nconst PermittedActionsContent = props => {\r\n\r\n    return (\r\n        <div className=\"permitted-Actions-content-layout\">\r\n            <label className=\"resource-item-content-value-text\" >{props.item}</label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PermittedActionsContent","import React from 'react'\r\nimport \"./permittedActions.scss\";\r\nimport ResourceItemTitle from \"../Title/ResourceItemTitle\"\r\nimport PermittedActionsContent from \"./PermittedActionsContent/PermittedActionsContent\"\r\n\r\n\r\nconst PermittedActions = props => {\r\n    const {actionsArray, title} = props;\r\n\r\n    const permittedActionsViews = actionsArray && actionsArray.map(action => \r\n    <PermittedActionsContent key={action.id} item={action.name}/>)\r\n\r\n    return (\r\n        <div className=\"permitted-actions-layout\">\r\n            <ResourceItemTitle title={title}/>\r\n            <div className=\"permitted-actions-content-layout\">\r\n                {permittedActionsViews}\r\n            </div>\r\n        </div>    \r\n    )\r\n  }\r\n  \r\n  export default PermittedActions","import React from 'react'\r\nimport \"./resourceDetails.scss\";\r\nimport GeneralDetails from './GeneralDetails/GeneralDetails';\r\nimport PermittedActions from './PermittedActions/PermittedActions'\r\nimport MyContext from '../../../context/MyContext'\r\n\r\n\r\nconst ResourceDetails = props => {\r\n\r\n  return (\r\n    <MyContext.Consumer>\r\n      {context => (\r\n        <div className=\"main-resource-item-layout\">\r\n          <div className=\"resource-item-layout\">\r\n            <div className=\"resource-item-header\">\r\n              <label className=\"resource-text-header\">{context.currentResource && context.currentResource.name}</label>\r\n            </div>\r\n            <div className=\"resource-content-wrapper\">\r\n              <GeneralDetails title={'GENERAL DETAILS'} />\r\n              <PermittedActions actionsArray={props.actionsArray} title={'PERMITTED ACTIONS'} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </MyContext.Consumer>\r\n  )\r\n}\r\n\r\nexport default ResourceDetails","export const initResourcesMap = (resources, actions) => {\r\n    let resourcesMap = new Map();\r\n\r\n    resources.forEach(item => {\r\n      let actionsArrayTemp = []\r\n      item.actionIds.forEach(item => {\r\n  \r\n        const tempAction = actions.find(action => item === action.id)\r\n        if (tempAction) {\r\n          actionsArrayTemp.push(tempAction);\r\n        }\r\n      });\r\n  \r\n      resourcesMap.set(item.id, actionsArrayTemp);\r\n    })\r\n\r\n    return resourcesMap;\r\n  \r\n}","import React from 'react';\r\nimport MyContext from './MyContext';\r\n\r\nexport default class MyProvider extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <MyContext.Provider\r\n                value={{\r\n                    currentResource: this.props.currentResource,\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n        );\r\n    }\r\n}","const fetchMode = { mode: 'cors' };\r\n\r\nconst baseUrl = ' https://calm-escarpment-18650.herokuapp.com/'\r\n\r\nclass FetchService {\r\n\r\n    get = async (url) => {\r\n        const headers = {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n\r\n        const request = new Request(`${baseUrl}${url}`, {\r\n            method: 'GET',\r\n            headers: headers,\r\n        });\r\n\r\n        return fetch(request, fetchMode).then((response) => {\r\n            return (response.json());\r\n        })\r\n        .catch((error) => {\r\n                return ([]);\r\n            }\r\n        );\r\n    };\r\n\r\n    post = async (url, body) => {\r\n        const headers = {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        };\r\n        const request = new Request(`${baseUrl}${url}`, {\r\n            method: 'POST',\r\n            headers: headers,\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        return fetch(request, fetchMode).then((response) => {\r\n            return (response.json());\r\n        });\r\n    };\r\n\r\n    patch = async (url, body) => {\r\n        const headers = {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        };\r\n        const request = new Request(`${baseUrl}${url}`, {\r\n            method: 'PATCH',\r\n            headers: headers,\r\n            body: JSON.stringify(body)\r\n        });\r\n\r\n        return fetch(request, fetchMode).then((response) => {\r\n            return (response.json());\r\n        });\r\n    };\r\n}\r\n\r\nconst fetchService = new FetchService();\r\nexport default fetchService;\r\n","import fetchService from \"./fetch\";\r\nimport resourcesMockData from '../files/data.json'\r\n\r\nclass Services {\r\n\r\n    getResources = async () => {\r\n        const resources = await fetchService.get('resources');\r\n        if(resources?.data?.length > 0) {\r\n            return resources.data;\r\n        }\r\n        else {\r\n            return resourcesMockData.resources;\r\n        }\r\n    }\r\n\r\n    getActions = async () => {\r\n        const actions = await fetchService.get('actions');\r\n        if(actions?.data?.length > 0) {\r\n            return actions.data;\r\n        }\r\n        else {\r\n            return resourcesMockData.actions;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst services = new Services();\r\nexport default services;","import React, { useEffect, useState } from 'react';\r\nimport \"./mainView.scss\";\r\nimport ResourceMain from '../../components/resources/ResourceMain';\r\nimport ResourceDetails from '../../components/resources/resourceDetails/ResourceDetails'\r\nimport { initResourcesMap } from '../../services/utils'\r\nimport MyProvider from '../../context/MyProvider'\r\nimport services from '../../services/services';\r\n\r\n\r\nconst MainView = props => {\r\n\r\n    const { history, location } = props;\r\n\r\n    const [state, setState] = useState({\r\n        currentResource: null,\r\n        resources: null,\r\n        actionsArray: null,\r\n        resourcesMap: null\r\n    })\r\n\r\n    const handleResourceClick = (resource) => {\r\n        history.replace(`/main?item=${resource.id}`);\r\n\r\n        setState({\r\n            ...state,\r\n            currentResource: resource,\r\n            actionsArray: state.resourcesMap.get(resource.id)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getResources = async () => {\r\n            const [resources, actions] = await Promise.all([\r\n                services.getResources(), services.getActions()\r\n            ])\r\n\r\n            // swill create map between resourceId and his actions\r\n            const resourcesMap = initResourcesMap(resources, actions)\r\n\r\n            const params = new URLSearchParams(location.search);\r\n            const item = params.get('item');\r\n            let currentSource;\r\n            if(item) {\r\n                currentSource = resources[Number(item - 1)];\r\n            }\r\n            else {\r\n                currentSource = resources[0];\r\n                history.replace(`/main?item=1`);\r\n            }\r\n\r\n            setState({\r\n                ...state,\r\n                currentResource: currentSource,\r\n                resources: resources,\r\n                resourcesMap: resourcesMap,\r\n                actionsArray: resourcesMap.get(currentSource.id)\r\n            })\r\n\r\n        };\r\n\r\n        getResources();\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <h1 className=\"demo-header\">Demo App</h1>\r\n            <div className=\"demo-content\">\r\n                <MyProvider currentResource={state.currentResource}>\r\n                    <ResourceMain resources={state.resources}\r\n                         resourceClick={handleResourceClick}/>\r\n                    <ResourceDetails actionsArray={state.actionsArray} />\r\n                </MyProvider>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainView","import React from 'react';\r\nimport './app.scss';\r\nimport { Route, Switch, BrowserRouter as Router, Redirect } from 'react-router-dom';\r\nimport MainView from './views/mainView/MainView.view';\r\n/////\r\nconst App = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Redirect from=\"/\" exact to=\"/main\"/>\r\n                <Route path=\"/main\" component={MainView} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}